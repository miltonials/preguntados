@{
    ViewData["Title"] = "Home Page";
}

<div class="container">
    <div class="row">
        <div class="col-md-6">
            <div class="align-content-center">


                <button id="startButton" class="btn btn-primary">Iniciar partida</button>
                <div id="questionContainer">
                </div>
            </div>
        </div>
        <div class="col-md-6 border" style=" max-height: 85vh; overflow: scroll;">
            <h3>Historial de partidas</h3>
            <p id="preguntas" class="d-none d-print-block">
                @ViewBag.Sesion.preguntas
            </p>
            <table class="table table-striped table-dark table-responsive table-hover table-bordered">
                <thead>
                    <tr>
                        <th>
                            Jugador/Intento
                        </th>
                        <th>
                            Aciertos
                        </th>
                    </tr>
                </thead>
                <tbody>
                    @for (int i = 0; i < ViewBag.Historial.resultados.Count; i++)
                    {
                        <tr>
                            <td>
                                @ViewBag.Historial.resultados[i].id
                            </td>
                            <td>
                                @ViewBag.Historial.resultados[i].aciertos
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>




@section Scripts {
<script>
    let totalScore = 0;
    let sesion = `@Html.Raw(ViewBag.Sesion.registro.id)`;

    document.getElementById("startButton").addEventListener("click", async function () {
        document.getElementById("startButton").style.display = "none";
        //esta llamada se hace para pasar los aciertos de null a 0 en el servidor
        await fetch(`https://localhost:7081/Preguntados/ValidarRespuesta?idPregunta=${-1}&respuesta=Z&sesion=${sesion}`, {
            method: 'GET',
            headers: {
                'Accept': 'application/json'
            }
        });
        showQuestion(0);
    });

    /**
     * Función asincrona que permite mostrar las preguntas 1 por 1
     * param {number} index: índice de la pregunta a mostrar
     */
    async function showQuestion(index) {
        let questions = await JSON.parse(
                document.getElementById("preguntas").innerText
        );
        let question = questions[index];

        if (!question) {
            let x = new XMLHttpRequest();
            x.open("GET", "https://localhost:7081/Preguntados/ObtenerPuntaje?idSesion=" + sesion, true);
            x.onreadystatechange = function () {
                if (x.readyState == 4 && x.status == 200) {
                    totalScore = x.responseText;
                    let mensaje = ``;
                    if (totalScore > 5) {
                        mensaje = `¡Felicitaciones, ganaste! 🥳`;
                    } else {
                        mensaje = `¡Perdiste! 😢`;
                    }

                    document.getElementById("questionContainer").innerHTML = `
                                    <h3>Fin del juego ${mensaje}</h3>
                                    <p>Respuestas correctas: ${totalScore}</p>
                                    <button onclick="location.reload()" class="btn btn-secondary">Volver a intentar</button>
                                `;
                }
            }
            x.send(null);
        } else {
            correctAnswer = question.respuestaCorrecta;
            document.getElementById("questionContainer").innerHTML = `
                                    <h3>Pregunta:</h3>
                                    <p>${question.enunciado}</p>
                                    <form id="answerForm">
                                        <input type="radio" name="answer" value="A" /> ${question.opcionA} <br />
                                        <input type="radio" name="answer" value="B" /> ${question.opcionB} <br />
                                        <input type="radio" name="answer" value="C" /> ${question.opcionC} <br />
                                        <input id="btnResponder" type="submit" value="Responder" class="btn btn-primary" enabled />
                                    </form>
                                `;

            document.getElementById("answerForm").addEventListener("submit", async function (event) {
                event.preventDefault();

                let selectedAnswer = document.querySelector('input[name="answer"]:checked').value;
                                    
                document.getElementById("questionContainer").innerHTML = `<h3>Validando respuesta...</h3>`;

                await fetch(`https://localhost:7081/Preguntados/ValidarRespuesta?idPregunta=${question.id}&respuesta=${selectedAnswer}&sesion=${sesion}`, {
                    method: 'GET',
                    headers: {
                        'Accept': 'application/json'
                    }
                });

                showQuestion(index + 1);
            });
        }
    }
</script>
}